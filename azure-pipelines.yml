# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '934b2e9d-f56a-475f-bc70-1ba74e937176'

  # Web app name
  webAppName: 'test-flask-web-project'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'test-flask-web-project-env'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.7
  pythonVersion: '3.7'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)/TestFlaskWebProject
      displayName: "Install Dependencies"

    - task: ArchiveFiles@2
      displayName: 'Archive Source Files'
      inputs:
        rootFolderOrFile: '$(projectRoot)/TestFlaskWebProject'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/src/app-$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/src/app-$(Build.BuildId).zip
      displayName: 'Upload Source Package'
      artifact: drop
    
    - task: ArchiveFiles@2
      displayName: 'Archive ARM Templates'
      inputs:
        rootFolderOrFile: '$(projectRoot)/ARM'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/arm/arm-$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/arm/arm-$(Build.BuildId).zip
      displayName: 'Upload ARM Templates Package'
      artifact: drop
